"""lane

Revision ID: d5c404653e49
Revises: 2c21bc2c16d6
Create Date: 2025-04-23 16:28:57.085709

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd5c404653e49'
down_revision = '2c21bc2c16d6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lanes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('open_unit', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('open_value', sa.Float(), nullable=True))
        
        # Solución para la conversión de integer a JSON
        batch_op.execute("""
            ALTER TABLE lanes 
            ALTER COLUMN additional_stops TYPE JSONB 
            USING CASE
                WHEN additional_stops IS NULL THEN NULL::jsonb
                ELSE to_jsonb(additional_stops::text)
            END
        """)
        
        batch_op.drop_column('leave_open_for_option')
        batch_op.drop_column('leave_open_for_number')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lanes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('leave_open_for_number', sa.NUMERIC(precision=100, scale=0), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('leave_open_for_option', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        
        # Reversión segura de JSONB a INTEGER
        batch_op.execute("""
            ALTER TABLE lanes 
            ALTER COLUMN additional_stops TYPE INTEGER 
            USING CASE
                WHEN additional_stops IS NULL THEN NULL::integer
                WHEN jsonb_typeof(additional_stops) = 'number' THEN (additional_stops#>>'{}')::numeric::integer
                ELSE NULL::integer
            END
        """)
        
        batch_op.drop_column('open_value')
        batch_op.drop_column('open_unit')
    # ### end Alembic commands ###