"""Add phone and address to users

Revision ID: 055f4c6e584c
Revises: a2d6c4b96018
Create Date: 2025-03-21 12:22:26.186179

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '055f4c6e584c'
down_revision = 'a2d6c4b96018'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lane_carriers')
    with op.batch_alter_table('carriers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('duns', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('carrier_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('shipper_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('carriers_contact_email_key', type_='unique')
        batch_op.create_unique_constraint(None, ['duns'])
        batch_op.drop_constraint('carriers_company_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'carriers', ['carrier_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'shippers', ['shipper_id'], ['id'])
        batch_op.drop_column('created_at')
        batch_op.drop_column('contact_phone')
        batch_op.drop_column('contact_email')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('contact_name')
        batch_op.drop_column('company_name')
        batch_op.drop_column('company_id')

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.alter_column('duns',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.drop_constraint('companies_company_name_key', type_='unique')
        batch_op.drop_constraint('companies_contact_email_key', type_='unique')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('created_at')
        batch_op.drop_column('contact_phone')
        batch_op.drop_column('contact_email')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('contact_name')
        batch_op.drop_column('address')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('address', sa.String(length=200), nullable=True))
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_constraint('users_email_key', type_='unique')
        batch_op.create_index('idx_users_email', ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.drop_column('contact_phone')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contact_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index('idx_users_email')
        batch_op.create_unique_constraint('users_email_key', ['email'])
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_column('address')
        batch_op.drop_column('phone')

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.add_column(sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contact_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contact_email', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('contact_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint('companies_contact_email_key', ['contact_email'])
        batch_op.create_unique_constraint('companies_company_name_key', ['company_name'])
        batch_op.alter_column('duns',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_column('user_id')

    with op.batch_alter_table('carriers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('company_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('contact_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contact_email', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('contact_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('carriers_company_id_fkey', 'companies', ['company_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('carriers_contact_email_key', ['contact_email'])
        batch_op.drop_column('user_id')
        batch_op.drop_column('shipper_id')
        batch_op.drop_column('carrier_id')
        batch_op.drop_column('duns')

    op.create_table('lane_carriers',
    sa.Column('lane_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('carrier_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['carrier_id'], ['carriers.id'], name='lane_carriers_carrier_id_fkey'),
    sa.ForeignKeyConstraint(['lane_id'], ['lanes.id'], name='lane_carriers_lane_id_fkey'),
    sa.PrimaryKeyConstraint('lane_id', 'carrier_id', name='lane_carriers_pkey')
    )
    # ### end Alembic commands ###
